last_fourth_match=         "output/kobo_main_combine/2023-11-10_combined_main_kobo_4.xlsx",
final_data=                "output/kobo_main_combine/2023-11-10_final_data.xlsx",
final_data_w_missing=      "output/kobo_main_combine/2023-11-10_final_data_w_missing.xlsx",
last_intermediary2=        "output/kobo_main_combine/2023-11-10_intermediary_2.xlsx",
last_intermediary3=        "output/kobo_main_combine/2023-11-10_intermediary_3.xlsx",
last_intermediary4=        "output/kobo_main_combine/2023-11-10_intermediary_4.xlsx",
multiple_choices2=         "output/kobo_main_combine/2023-11-10_multiples_2.xlsx",
multiple_choices4=         "output/kobo_main_combine/2023-11-10_multiples_4.xlsx",
haiti_translation=         "output/kobo_main_combine/2023-09-20_translation_haiti_to_eng.xlsx",
ven_col_translation=       "output/kobo_main_combine/2023-11-10_translation_ven_col_to_eng.xlsx",
ven_col_translation_2=     "output/kobo_main_combine/2023-11-10_translation_ven_col_to_eng_final.xlsx",
run_first_match =          "yes",
run_second_match=          "yes",
run_third_match =          "yes",
run_fourth_match =         "yes",
run_final_combine=         "yes",
#E#
geo_data_date=             "output/geo_data_info/2023-11-13_full_data_geo_date.xlsx",
geo_dataC_date=            "output/geo_data_info/2023-11-13_full_dataC_geo_date.xlsx",
geo_dataC_dateC=           "output/geo_data_info/2023-11-13_full_dataC_geo_dateC.xlsx",
check_fix_1_up=            "output/fix_pcodes/2023-11-13_geo_fix_1_ready.xlsx",
check_fix_1_na=            "output/fix_pcodes/2023-11-13_geo_fix_1_na_ready.xlsx",
run_begin_grouping=            "no",
run_price_country_standard=    "yes",
run_date_geo =                 "yes",
run_vendor_cleaning=           "yes",
run_date_cleaning=             "yes"
)
source("utils/init.r")
rm(list = ls())
library(dplyr)
library(purrr)
library(readxl)
library(openxlsx)
library(writexl)
library(zonator)
library(tidyr)
library(stringr)
library(translateR)
library(lubridate)
library(stringi)
library(furrr)
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*# A.SET UP
opts <- list(
new_data_only=             "yes", ## always very suggested to keep ="yes" as there as been (few) manual changes
#A# OPTIONS
overview_file =            "resources/overview_file.xlsx",
dir_input =                "input",
dir_output =               "output/",
dir_clean_only =           "output/only_clean_data/",
#B# MAIN DATA
run_clean_check =          "no",
run_clean_export =         "no",
run_variable_concat_list = "no",
run_variable_check =       "no",
run_redo_uuid_assignment=      "no", ## run only after having uploaded new clean data
#C# KOBO
run_kobo_check =           "no",
run_kobo_export=           "no",
run_remove_no_tool=        "no",
run_concat_kobo_tool=      "no",
#D# COMBINE MAIN-KOBO
last_concat_var=           "output/variables_names/2023-11-10_concatenated_variable.xlsx",
last_concat_kobo=          "output/variables_names/2023-11-10_concatenated_kobo.xlsx",
last_first_match=          "output/kobo_main_combine/2023-11-10_combined_main_kobo_1.xlsx",
last_second_match=         "output/kobo_main_combine/2023-11-10_combined_main_kobo_2.xlsx",
last_third_match=          "output/kobo_main_combine/2023-11-10_combined_main_kobo_3.xlsx",
last_fourth_match=         "output/kobo_main_combine/2023-11-10_combined_main_kobo_4.xlsx",
final_data=                "output/kobo_main_combine/2023-11-10_final_data.xlsx",
final_data_w_missing=      "output/kobo_main_combine/2023-11-10_final_data_w_missing.xlsx",
last_intermediary2=        "output/kobo_main_combine/2023-11-10_intermediary_2.xlsx",
last_intermediary3=        "output/kobo_main_combine/2023-11-10_intermediary_3.xlsx",
last_intermediary4=        "output/kobo_main_combine/2023-11-10_intermediary_4.xlsx",
multiple_choices2=         "output/kobo_main_combine/2023-11-10_multiples_2.xlsx",
multiple_choices4=         "output/kobo_main_combine/2023-11-10_multiples_4.xlsx",
haiti_translation=         "output/kobo_main_combine/2023-09-20_translation_haiti_to_eng.xlsx",
ven_col_translation=       "output/kobo_main_combine/2023-11-10_translation_ven_col_to_eng.xlsx",
ven_col_translation_2=     "output/kobo_main_combine/2023-11-10_translation_ven_col_to_eng_final.xlsx",
run_first_match =          "no",
run_second_match=          "no",
run_third_match =          "no",
run_fourth_match =         "no",
run_final_combine=         "no",
#E#
run_begin_grouping=            "no",
run_price_country_standard=    "no",
#F#
geo_data_date=             "output/geo_data_info/2023-11-22_full_data_geo_date.xlsx",
geo_dataC_date=            "output/geo_data_info/2023-11-22_full_dataC_geo_date.xlsx",
geo_dataC_dateC=           "output/geo_data_info/2023-11-22_full_dataC_geo_dateC.xlsx",
check_fix_1_up=            "output/fix_pcodes/geo_fix_ready/2023-11-13_geo_fix_1_ready.xlsx",
check_fix_2_up=            "output/fix_pcodes/geo_fix_ready/2023-11-16_geo_fix_2_ready.xlsx",
check_fix_3_up=            "output/fix_pcodes/geo_fix_ready/2023-11-17_geo_fix_3_ready.xlsx",
check_fix_4_up=            "output/fix_pcodes/geo_fix_ready/2023-11-20_geo_fix_4_ready.xlsx",
intermediate_1=            "output/fix_pcodes/intermediary_data/2023-11-22_intermediary_admin_1_merge.xlsx",
intermediate_2=            "output/fix_pcodes/intermediary_data/2023-11-22_intermediary_admin_2_merge.xlsx",
intermediate_3=            "output/fix_pcodes/intermediary_data/2023-11-22_intermediary_admin_3_merge.xlsx",
intermediate_3=            "output/fix_pcodes/intermediary_data/2023-11-22_intermediary_admin_4_merge.xlsx",
full_long_incomplete=      "output/fix_pcodes/2023-11-22_full_long_geo_incomplete.xlsx",
full_data_list=            "output/all_datasets/all_JMMI_data_list.RData",
run_date_geo =                 "yes",
run_vendor_cleaning=           "yes",
run_date_cleaning=             "yes",
run_geo_cleaning_1=            "yes",
run_geo_cleaning_2=            "yes",
run_geo_cleaning_3=            "yes",
run_geo_cleaning_4=            "yes",
run_geo_cleaning_spec=         "yes"
)
source("utils/init.r")
source("utils/init.r")
source("utils/utils.r")
rm(list = ls())
library(dplyr)
library(purrr)
library(readxl)
library(openxlsx)
library(writexl)
library(zonator)
library(tidyr)
library(stringr)
library(translateR)
library(lubridate)
library(stringi)
library(furrr)
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*# A.SET UP
opts <- list(
new_data_only=             "yes", ## always very suggested to keep ="yes" as there as been (few) manual changes
#A# OPTIONS
overview_file =            "resources/overview_file.xlsx",
dir_input =                "input",
dir_output =               "output/",
dir_clean_only =           "output/only_clean_data/",
#B# MAIN DATA
run_clean_check =          "no",
run_clean_export =         "no",
run_variable_concat_list = "no",
run_variable_check =       "no",
run_redo_uuid_assignment=      "no", ## run only after having uploaded new clean data
#C# KOBO
run_kobo_check =           "no",
run_kobo_export=           "no",
run_remove_no_tool=        "no",
run_concat_kobo_tool=      "no",
#D# COMBINE MAIN-KOBO
last_concat_var=           "output/variables_names/2023-11-10_concatenated_variable.xlsx",
last_concat_kobo=          "output/variables_names/2023-11-10_concatenated_kobo.xlsx",
last_first_match=          "output/kobo_main_combine/2023-11-10_combined_main_kobo_1.xlsx",
last_second_match=         "output/kobo_main_combine/2023-11-10_combined_main_kobo_2.xlsx",
last_third_match=          "output/kobo_main_combine/2023-11-10_combined_main_kobo_3.xlsx",
last_fourth_match=         "output/kobo_main_combine/2023-11-10_combined_main_kobo_4.xlsx",
final_data=                "output/kobo_main_combine/2023-11-10_final_data.xlsx",
final_data_w_missing=      "output/kobo_main_combine/2023-11-10_final_data_w_missing.xlsx",
last_intermediary2=        "output/kobo_main_combine/2023-11-10_intermediary_2.xlsx",
last_intermediary3=        "output/kobo_main_combine/2023-11-10_intermediary_3.xlsx",
last_intermediary4=        "output/kobo_main_combine/2023-11-10_intermediary_4.xlsx",
multiple_choices2=         "output/kobo_main_combine/2023-11-10_multiples_2.xlsx",
multiple_choices4=         "output/kobo_main_combine/2023-11-10_multiples_4.xlsx",
haiti_translation=         "output/kobo_main_combine/2023-09-20_translation_haiti_to_eng.xlsx",
ven_col_translation=       "output/kobo_main_combine/2023-11-10_translation_ven_col_to_eng.xlsx",
ven_col_translation_2=     "output/kobo_main_combine/2023-11-10_translation_ven_col_to_eng_final.xlsx",
run_first_match =          "no",
run_second_match=          "no",
run_third_match =          "no",
run_fourth_match =         "no",
run_final_combine=         "no",
#E#
run_begin_grouping=            "no",
run_price_country_standard=    "no",
#F#
geo_data_date=             "output/geo_data_info/2023-11-22_full_data_geo_date.xlsx",
geo_dataC_date=            "output/geo_data_info/2023-11-22_full_dataC_geo_date.xlsx",
geo_dataC_dateC=           "output/geo_data_info/2023-11-22_full_dataC_geo_dateC.xlsx",
check_fix_1_up=            "output/fix_pcodes/geo_fix_ready/2023-11-13_geo_fix_1_ready.xlsx",
check_fix_2_up=            "output/fix_pcodes/geo_fix_ready/2023-11-16_geo_fix_2_ready.xlsx",
check_fix_3_up=            "output/fix_pcodes/geo_fix_ready/2023-11-17_geo_fix_3_ready.xlsx",
check_fix_4_up=            "output/fix_pcodes/geo_fix_ready/2023-11-20_geo_fix_4_ready.xlsx",
intermediate_1=            "output/fix_pcodes/intermediary_data/2023-11-22_intermediary_admin_1_merge.xlsx",
intermediate_2=            "output/fix_pcodes/intermediary_data/2023-11-22_intermediary_admin_2_merge.xlsx",
intermediate_3=            "output/fix_pcodes/intermediary_data/2023-11-22_intermediary_admin_3_merge.xlsx",
intermediate_3=            "output/fix_pcodes/intermediary_data/2023-11-22_intermediary_admin_4_merge.xlsx",
full_long_incomplete=      "output/fix_pcodes/2023-11-22_full_long_geo_incomplete.xlsx",
full_data_list=            "output/all_datasets/all_JMMI_data_list.RData",
run_date_geo =                 "yes",
run_vendor_cleaning=           "yes",
run_date_cleaning=             "yes",
run_geo_cleaning_1=            "yes",
run_geo_cleaning_2=            "yes",
run_geo_cleaning_3=            "yes",
run_geo_cleaning_4=            "yes",
run_geo_cleaning_spec=         "yes"
)
source("utils/init.r")
rm(list = ls())
library(dplyr)
library(purrr)
library(readxl)
library(openxlsx)
library(writexl)
library(zonator)
library(tidyr)
library(stringr)
library(translateR)
library(lubridate)
library(stringi)
library(furrr)
library(priceR)
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*# A.SET UP
opts <- list(
new_data_only=             "yes", ## always very suggested to keep ="yes" as there as been (few) manual changes
#A# OPTIONS
overview_file =            "resources/overview_file.xlsx",
dir_input =                "input",
dir_output =               "output/",
dir_clean_only =           "output/only_clean_data/",
#B# MAIN DATA
run_clean_check =          "no",
run_clean_export =         "no",
run_variable_concat_list = "no",
run_variable_check =       "no",
run_redo_uuid_assignment=  "no", ## run only after having uploaded new clean data
#C# KOBO
run_kobo_check =           "no",
run_kobo_export=           "no",
run_remove_no_tool=        "no",
run_concat_kobo_tool=      "no",
#D# COMBINE MAIN-KOBO
last_concat_var=           "output/variables_names/2023-11-23_concatenated_variable.xlsx",
last_concat_kobo=          "output/variables_names/2023-11-23_concatenated_kobo.xlsx",
last_first_match=          "output/kobo_main_combine/2023-11-23_combined_main_kobo_1.xlsx",
last_second_match=         "output/kobo_main_combine/2023-11-23_combined_main_kobo_2.xlsx",
last_third_match=          "output/kobo_main_combine/2023-11-23_combined_main_kobo_3.xlsx",
last_fourth_match=         "output/kobo_main_combine/2023-11-23_combined_main_kobo_4.xlsx",
last_intermediary2=        "output/kobo_main_combine/2023-11-23_intermediary_2.xlsx",
last_intermediary3=        "output/kobo_main_combine/2023-11-23_intermediary_3.xlsx",
last_intermediary4=        "output/kobo_main_combine/2023-11-23_intermediary_4.xlsx",
multiple_choices2=         "output/kobo_main_combine/2023-11-23_multiples_2.xlsx",
multiple_choices4=         "output/kobo_main_combine/2023-11-23_multiples_4.xlsx",
final_data_w_missing=      "output/kobo_main_combine/2023-11-27_final_data_all.xlsx",
final_data_no_multiples=   "output/kobo_main_combine/2023-11-27_final_data_no_multichoice.xlsx",
haiti_translation=         "output/kobo_main_combine/2023-09-20_translation_haiti_to_eng.xlsx",
ven_col_translation=       "output/kobo_main_combine/2023-11-10_translation_ven_col_to_eng.xlsx",
ven_col_translation_2=     "output/kobo_main_combine/2023-11-10_translation_ven_col_to_eng_final.xlsx",
run_first_match =          "yes",
run_second_match=          "yes",
run_third_match =          "yes",
run_fourth_match =         "yes",
run_final_combine=         "yes",
#E#
run_begin_grouping=            "no",
run_price_country_standard=    "no",
run_stock_country_standard =   "yes",
#F#
geo_data_date=             "output/geo_data_info/2023-12-01_full_data_geo_date.xlsx",
geo_dataC_date=            "output/geo_data_info/2023-12-01_full_dataC_geo_date.xlsx",
geo_data_dateC=            "output/geo_data_info/2023-12-01_full_data_geo_dateC.xlsx",
geoC_data_date=            "output/geo_data_info/2023-12-01_full_data_geoC_date.xlsx",
check_fix_1_up=            "output/fix_pcodes/geo_fix_ready/2023-11-13_geo_fix_1_ready.xlsx",
check_fix_2_up=            "output/fix_pcodes/geo_fix_ready/2023-11-16_geo_fix_2_ready.xlsx",
check_fix_3_up=            "output/fix_pcodes/geo_fix_ready/2023-11-17_geo_fix_3_ready.xlsx",
check_fix_4_up=            "output/fix_pcodes/geo_fix_ready/2023-11-20_geo_fix_4_ready.xlsx",
check_fix_final=           "output/fix_pcodes/geo_fix_ready/2023-11-30_geo_fix_final_ready.xlsx",
intermediate_1=            "output/fix_pcodes/intermediary_data/2023-12-01_intermediary_admin_1_merge.xlsx",
intermediate_2=            "output/fix_pcodes/intermediary_data/2023-12-01_intermediary_admin_2_merge.xlsx",
intermediate_3=            "output/fix_pcodes/intermediary_data/2023-12-01_intermediary_admin_3_merge.xlsx",
intermediate_4=            "output/fix_pcodes/intermediary_data/2023-12-01_intermediary_admin_4_merge.xlsx",
full_long_incomplete=      "output/fix_pcodes/2023-12-01_full_long_geo_incomplete.xlsx",
full_data_list=            "output/all_datasets/all_JMMI_data_list.RData",
run_date_geo =                 "yes",
run_vendor_cleaning=           "yes",
run_date_cleaning=             "yes",
run_geo_cleaning_full=         "yes",
run_geo_cleaning_spec=         "yes",
#G#
mega_price_list=             "output/long_price_datasets/2023-12-13_price_long_list.RData",
mega_stock_extra_data=       "output/stock_final/2023-12-13_full_stock_extra.xlsx",
mega_stock_data=             "output/stock_final/2023-12-13_full_stock_main.Rdata"
)
source("utils/init.r")
View(opts)
install.packages("devtools")
con <- dbConnect(odbc::odbc(), driver = "ODBC Driver 17 for SQL Server",
server = "sql-server-2023-184.database.windows.net",
database = "sqldb-pf-2023-184",
uid = "admin-2023-184", pwd = "!W9L.txRynhJ-7R")
library(dplyr)
library(lubridate)
library(data.table)
library(DBI)
con <- dbConnect(odbc::odbc(), driver = "ODBC Driver 17 for SQL Server",
server = "sql-server-2023-184.database.windows.net",
database = "sqldb-pf-2023-184",
uid = "admin-2023-184", pwd = "!W9L.txRynhJ-7R")
library(dbplyr)
loa("data/full_long_data.rda")
load("data/full_long_data.rda")
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
rm(list = ls())
library(dplyr)
library(purrr)
library(readxl)
library(openxlsx)
library(writexl)
library(tidyr)
library(stringr)
# library(translateR)
library(lubridate)
library(data.table)
library(stringi)
library(furrr)
library(priceR)
source("utils/utils_main_functions.r")
source("utils/init.r")
opts <- list(
new_data_only=             "yes", ## always very suggested to keep ="yes" as there as been (few) manual changes
#A# OPTIONS
JMMI_master_dictionary =   "resources/JMMI_master_dictionary.xlsx",
dir_input =                "input",
dir_output =               "output/",
dir_clean_only =           "output/B2_all_clean_data_tabs/",
#B# MAIN DATA
run_clean_check =          "yes",
run_clean_export =         "yes",
run_variable_concat_list = "yes",
run_variable_check =       "yes",
run_redo_uuid_assignment=  "yes", ## run only after having uploaded new clean data
#C# KOBO
run_kobo_check =           "yes",
run_kobo_export=           "yes",
run_remove_no_tool=        "yes",
run_concat_kobo_tool=      "yes",
#D# COMBINE MAIN-KOBO
last_concat_var=           "output/B3_concat_var_names/2024-01-23_concatenated_variable.xlsx",
last_concat_kobo=          "output/B3_concat_var_names/2024-01-23_concatenated_kobo.xlsx",
last_first_match=          "output/kobo_main_combine/2024-01-23_combined_main_kobo_1.xlsx",
last_second_match=         "output/kobo_main_combine/2024-01-23_combined_main_kobo_2.xlsx",
last_third_match=          "output/kobo_main_combine/2024-01-23_combined_main_kobo_3.xlsx",
last_fourth_match=         "output/kobo_main_combine/2024-01-23_combined_main_kobo_4.xlsx",
last_intermediary2=        "output/kobo_main_combine/2024-01-23_intermediary_2.xlsx",
last_intermediary3=        "output/kobo_main_combine/2024-01-23_intermediary_3.xlsx",
last_intermediary4=        "output/kobo_main_combine/2024-01-23_intermediary_4.xlsx",
multiple_choices2=         "output/kobo_main_combine/2024-01-23_multiples_2.xlsx",
multiple_choices4=         "output/kobo_main_combine/2024-01-23_multiples_4.xlsx",
final_data_w_missing=      "output/kobo_main_combine/2023-11-27_final_data_all.xlsx",
final_data_no_multiples=   "output/kobo_main_combine/2023-11-27_final_data_no_multichoice.xlsx",
haiti_translation=         "output/kobo_main_combine/2023-09-20_translation_haiti_to_eng.xlsx",
ven_col_translation=       "output/kobo_main_combine/2023-11-10_translation_ven_col_to_eng.xlsx",
ven_col_translation_2=     "output/kobo_main_combine/2023-11-10_translation_ven_col_to_eng_final.xlsx",
run_first_match =          "yes",
run_second_match=          "yes",
run_third_match =          "yes",
run_fourth_match =         "yes",
run_final_combine=         "yes",
#E#
run_begin_grouping=            "no",
run_price_country_standard=    "no",
run_stock_country_standard =   "yes",
mega_stock_extra_market=     "output/stock_final/2024-01-08_market_availability_extra.xlsx",
mega_stock_extra_shop=       "output/stock_final/2024-01-08_shop_availability_extra.xlsx",
mega_stock_extra_nga=        "output/stock_final/2024-01-08_stock_nga.xlsx",
mega_other_info=             "output/stock_final/2024-01-08_other_info_other.xlsx",
#F#
geo_data_date=             "output/geo_data_info/2023-12-01_full_data_geo_date.xlsx",
geo_dataC_date=            "output/geo_data_info/2023-12-01_full_dataC_geo_date.xlsx",
geo_data_dateC=            "output/geo_data_info/2023-12-01_full_data_geo_dateC.xlsx",
geoC_data_date=            "output/geo_data_info/2023-12-01_full_data_geoC_date.xlsx",
check_fix_1_up=            "output/fix_pcodes/geo_fix_ready/2023-11-13_geo_fix_1_ready.xlsx",
check_fix_2_up=            "output/fix_pcodes/geo_fix_ready/2023-11-16_geo_fix_2_ready.xlsx",
check_fix_3_up=            "output/fix_pcodes/geo_fix_ready/2023-11-17_geo_fix_3_ready.xlsx",
check_fix_4_up=            "output/fix_pcodes/geo_fix_ready/2023-11-20_geo_fix_4_ready.xlsx",
check_fix_final=           "output/fix_pcodes/geo_fix_ready/2023-11-30_geo_fix_final_ready.xlsx",
intermediate_1=            "output/fix_pcodes/intermediary_data/2023-12-01_intermediary_admin_1_merge.xlsx",
intermediate_2=            "output/fix_pcodes/intermediary_data/2023-12-01_intermediary_admin_2_merge.xlsx",
intermediate_3=            "output/fix_pcodes/intermediary_data/2023-12-01_intermediary_admin_3_merge.xlsx",
intermediate_4=            "output/fix_pcodes/intermediary_data/2023-12-01_intermediary_admin_4_merge.xlsx",
full_long_incomplete=      "output/fix_pcodes/2023-12-01_full_long_geo_incomplete.xlsx",
full_data_list=            "output/all_datasets/all_JMMI_data_list.RData",
run_date_geo =                 "yes",
run_vendor_cleaning=           "yes",
run_date_cleaning=             "yes",
run_geo_cleaning_full=         "yes",
run_geo_cleaning_spec=         "yes"
#G#
)
source("utils/init.r")
source("utils/init.r")
rm(list = ls())
library(prettydoc)
library(dplyr)
library(purrr)
library(readxl)
library(openxlsx)
library(writexl)
library(tidyr)
library(stringr)
# library(translateR)
library(lubridate)
library(data.table)
library(stringi)
library(furrr)
library(priceR)
opts <- list(
new_data_only=             "yes", ## always very suggested to keep ="yes" as there as been (few) manual changes
## to the datasets that we could not keep track of
#A# OPTIONS
overview_file =            "resources/JMMI_master_dictionary.xlsx",
dir_clean_only =           "output/B2_all_clean_data_tabs/",
#B# MAIN DATA
run_clean_check =          "yes",
run_clean_export =         "yes",
run_variable_concat_list = "yes",
run_variable_check =       "yes",
run_redo_uuid_assignment=  "yes", ## run only after having uploaded new clean data
unique_uuid_mapping=       "output/B5_redo_uuid_assignment/unique_uuid_map.xlsx",
uuid_to_remove=            "output/B5_redo_uuid_assignment/duplicated_uuid_to_remove.xlsx",
#C# KOBO
run_kobo_check =           "yes",
run_kobo_export=           "yes",
run_remove_no_tool=        "yes",
run_concat_kobo_tool=      "yes",
#D# COMBINE MAIN-KOBO
last_concat_var=           "output/B3_concat_var_names/2024-02-27_concatenated_variable.xlsx",
last_concat_kobo=          "output/C4_concat_kobo_vars/2024-02-28_concatenated_kobo.xlsx",
last_first_match=           "output/D1_first_merge_question_kobo/2024-02-28_combined_main_kobo_1.xlsx",
last_second_match=         "output/D2_second_merge_question_kobo/2024-02-28_combined_main_kobo_2.xlsx",
last_third_match=           "output/D3_third_merge_question_kobo/2024-02-28_combined_main_kobo_3.xlsx",
last_fourth_match=         "output/D4_fourth_merge_question_kobo/2024-02-28_combined_main_kobo_4.xlsx",
last_intermediary2=        "output/D2_second_merge_question_kobo/2024-02-28_intermediary_2.xlsx",
last_intermediary3=         "output/D3_third_merge_question_kobo/2024-02-28_intermediary_3.xlsx",
last_intermediary4=        "output/D4_fourth_merge_question_kobo/2024-02-28_intermediary_4.xlsx",
multiple_choices2=         "output/D2_second_merge_question_kobo/2024-02-28_multiples_2.xlsx",
multiple_choices4=         "output/D4_fourth_merge_question_kobo/2024-02-28_multiples_4.xlsx",
final_data_w_missing=      "output/D6_final_merge_question_kobo/2024-02-28_final_data_all.xlsx",
final_data_no_multiples=   "output/D6_final_merge_question_kobo/2024-02-28_final_data_no_multichoice.xlsx",
haiti_translation=         "output/D1_first_merge_question_kobo/2023-09-20_translation_haiti_to_eng.xlsx",
ven_col_translation=       "output/D1_first_merge_question_kobo/2023-11-10_translation_ven_col_to_eng.xlsx",
run_first_match =          "yes",
run_second_match=          "yes",
run_third_match =          "yes",
run_fourth_match =         "yes",
run_final_combine=         "yes",
#E# PRICE CONVERSION
run_begin_grouping=            "no",
run_price_country_standard=    "no",
run_stock_country_standard =   "yes",
mega_stock_extra_market=     "output/E5_extra_info_extraction/2024-01-08_market_availability_extra.xlsx",
mega_stock_extra_shop=       "output/E5_extra_info_extraction/2024-01-08_shop_availability_extra.xlsx",
mega_stock_extra_nga=        "output/E5_extra_info_extraction/2024-01-08_stock_nga.xlsx",
#F# CLEAN GEO-DATE-STD_DATA
geo_data_date=             "output/F1_extract_geo_date_pcode/2023-12-01_full_data_geo_date.xlsx",
geo_dataC_date=            "output/F2_clean_market_shop_info/2023-12-01_full_dataC_geo_date.xlsx",
geo_data_dateC=            "output/F3_clean_date_time_info/2023-12-01_full_data_geo_dateC.xlsx",
geoC_data_date=            "output/F4_clean_pcode_geo/2023-12-01_full_data_geoC_date.xlsx",
check_fix_1_up=            "output/F4_clean_pcode_geo/manual_geo_fix_done/2023-11-13_geo_fix_1_ready.xlsx",
check_fix_2_up=            "output/F4_clean_pcode_geo/manual_geo_fix_done/2023-11-16_geo_fix_2_ready.xlsx",
check_fix_3_up=            "output/F4_clean_pcode_geo/manual_geo_fix_done/2023-11-17_geo_fix_3_ready.xlsx",
check_fix_4_up=            "output/F4_clean_pcode_geo/manual_geo_fix_done/2023-11-20_geo_fix_4_ready.xlsx",
check_fix_final=           "output/F4_clean_pcode_geo/manual_geo_fix_done/2023-11-30_geo_fix_final_ready.xlsx",
intermediate_1=            "output/F4_clean_pcode_geo/intermediary_pcode_map/2023-12-01_intermediary_admin_1_merge.xlsx",
intermediate_2=            "output/F4_clean_pcode_geo/intermediary_pcode_map/2023-12-01_intermediary_admin_2_merge.xlsx",
intermediate_3=            "output/F4_clean_pcode_geo/intermediary_pcode_map/2023-12-01_intermediary_admin_3_merge.xlsx",
intermediate_4=            "output/F4_clean_pcode_geo/intermediary_pcode_map/2023-12-01_intermediary_admin_4_merge.xlsx",
full_long_incomplete=      "output/F4_clean_pcode_geo/2023-12-01_full_long_geo_incomplete.xlsx",
full_data_list=            "output/99_all_datasets/all_JMMI_data_list.RData",
run_date_geo =                 "yes",
run_vendor_cleaning=           "yes",
run_date_cleaning=             "yes",
run_geo_cleaning_full=         "yes",
run_geo_cleaning_spec=         "yes",
#G# PUT EVERYTHING TOGETHER
run_final_wide_labelling=      "yes",
run_final_merge=               "yes",
final_variable_selection=      "output/D6_final_merge_question_kobo/2024-08-01_final_variable_selection.xlsx"
)
source("utils/init.r")
source("utils/utils_main_functions.r")
### A. MAIN SET UP
source("utils/E2_price_std_scripts/PL_main_setup.r")
### A. MAIN SET UP
source("utils/E2_price_std_scripts/PL_main_setup.r")
library(shiny); runApp('C:/Users/giovanni.giuliari/OneDrive - ACTED/HEA/consolidated_database/JMMI-API-Documentation-Web/JMMI-API-Documentation/app_old.R')
runApp('C:/Users/giovanni.giuliari/OneDrive - ACTED/HEA/consolidated_database/JMMI-API-Documentation-Web/JMMI-API-Documentation/app_old.R')
runApp('C:/Users/giovanni.giuliari/OneDrive - ACTED/HEA/consolidated_database/JMMI-API-Documentation-Web/JMMI-API-Documentation')
runApp('C:/Users/giovanni.giuliari/OneDrive - ACTED/HEA/consolidated_database/JMMI-API-Documentation-Web/JMMI-API-Documentation')
runApp('C:/Users/giovanni.giuliari/OneDrive - ACTED/HEA/consolidated_database/JMMI-API-Documentation-Web/JMMI-API-Documentation')
runApp('C:/Users/giovanni.giuliari/OneDrive - ACTED/HEA/consolidated_database/JMMI-API-Documentation-Web/JMMI-API-Documentation')
runApp('C:/Users/giovanni.giuliari/OneDrive - ACTED/HEA/consolidated_database/JMMI-API-Documentation-Web/JMMI-API-Documentation')
library(shiny); runApp('C:/Users/giovanni.giuliari/OneDrive - ACTED/HEA/consolidated_database/JMMI-API-Documentation-Web/JMMI-API-Documentation/app_old.R')
runApp('C:/Users/giovanni.giuliari/OneDrive - ACTED/HEA/consolidated_database/JMMI-API-Documentation-Web/JMMI-API-Documentation/app (1).R')
runApp('C:/Users/giovanni.giuliari/OneDrive - ACTED/HEA/consolidated_database/JMMI-API-Documentation-Web/JMMI-API-Documentation/test.R')
runApp('C:/Users/giovanni.giuliari/OneDrive - ACTED/HEA/consolidated_database/JMMI-API-Documentation-Web/JMMI-API-Documentation')
runApp('C:/Users/giovanni.giuliari/OneDrive - ACTED/HEA/consolidated_database/JMMI-API-Documentation-Web/JMMI-API-Documentation')
runApp('C:/Users/giovanni.giuliari/OneDrive - ACTED/HEA/consolidated_database/JMMI-API-Documentation-Web/JMMI-API-Documentation')
runApp('C:/Users/giovanni.giuliari/Downloads/app_old.R')
runApp('C:/Users/giovanni.giuliari/OneDrive - ACTED/HEA/consolidated_database/JMMI-API-Documentation-Web/JMMI-API-Documentation/app_old.R')
runApp('C:/Users/giovanni.giuliari/Downloads/app_old.R')
runApp('C:/Users/giovanni.giuliari/OneDrive - ACTED/HEA/consolidated_database/JMMI-API-Documentation-Web/JMMI-API-Documentation/test.R')
runApp('C:/Users/giovanni.giuliari/OneDrive - ACTED/HEA/consolidated_database/JMMI-API-Documentation-Web/JMMI-API-Documentation')
runApp('C:/Users/giovanni.giuliari/OneDrive - ACTED/HEA/consolidated_database/JMMI-API-Documentation-Web/JMMI-API-Documentation/test.R')
runApp('C:/Users/giovanni.giuliari/OneDrive - ACTED/HEA/consolidated_database/JMMI-API-Documentation-Web/JMMI-API-Documentation/test.R')
runApp('C:/Users/giovanni.giuliari/OneDrive - ACTED/HEA/consolidated_database/JMMI-API-Documentation-Web/JMMI-API-Documentation/test.R')
runApp('C:/Users/giovanni.giuliari/OneDrive - ACTED/HEA/consolidated_database/JMMI-API-Documentation-Web/JMMI-API-Documentation/app_old.R')
shiny::runApp('C:/Users/giovanni.giuliari/OneDrive - ACTED/HEA/consolidated_database/JMMI-API-Documentation-Web/JMMI-API-Documentation')
runApp('C:/Users/giovanni.giuliari/OneDrive - ACTED/HEA/consolidated_database/JMMI-API-Documentation-Web/JMMI-API-Documentation/test.R')
runApp('C:/Users/giovanni.giuliari/OneDrive - ACTED/HEA/consolidated_database/JMMI-API-Documentation-Web/JMMI-API-Documentation')
runApp('C:/Users/giovanni.giuliari/OneDrive - ACTED/HEA/consolidated_database/JMMI-API-Documentation-Web/app_old.R')
shiny::runApp('C:/Users/giovanni.giuliari/OneDrive - ACTED/HEA/consolidated_database/JMMI-API-Documentation-Web/JMMI-API-Documentation')
shiny::runApp('C:/Users/giovanni.giuliari/OneDrive - ACTED/HEA/consolidated_database/JMMI-API-Documentation-Web/JMMI-API-Documentation')
runApp('C:/Users/giovanni.giuliari/OneDrive - ACTED/HEA/consolidated_database/JMMI-API-Documentation-Web/JMMI-API-Documentation')
runApp('C:/Users/giovanni.giuliari/OneDrive - ACTED/HEA/consolidated_database/JMMI-API-Documentation-Web/JMMI-API-Documentation')
runApp('C:/Users/giovanni.giuliari/OneDrive - ACTED/HEA/consolidated_database/JMMI-API-Documentation-Web/JMMI-API-Documentation')
